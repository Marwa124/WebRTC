#!/usr/bin/env node

/**
 * Module dependencies.
 */

var app = require('../app');
var debug = require('debug')('socket.io-chat:server');
var http = require('http');

/**
 * Get port from environment and store in Express.
 */

var port = normalizePort(process.env.PORT || '3000');
app.set('port', port);

/**
 * Create HTTP server.
 */

var server = http.createServer(app);

/**
 * Listen on provided port, on all network interfaces.
 */

server.listen(port);
server.on('error', onError);
server.on('listening', onListening);

/**
 * Normalize a port into a number, string, or false.
 */

function normalizePort(val) {
  var port = parseInt(val, 10);

  if (isNaN(port)) {
    // named pipe
    return val;
  }

  if (port >= 0) {
    // port number
    return port;
  }

  return false;
}

/**
 * Event listener for HTTP server "error" event.
 */

function onError(error) {
  if (error.syscall !== 'listen') {
    throw error;
  }

  var bind = typeof port === 'string'
    ? 'Pipe ' + port
    : 'Port ' + port;

  // handle specific listen errors with friendly messages
  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' requires elevated privileges');
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error(bind + ' is already in use');
      process.exit(1);
      break;
    default:
      throw error;
  }
}

/**
 * Event listener for HTTP server "listening" event.
 */

function onListening() {
  var addr = server.address();
  var bind = typeof addr === 'string'
    ? 'pipe ' + addr
    : 'port ' + addr.port;
  debug('Listening on ' + bind);
}

var io = require('socket.io')(server);
io.on('connection', function(socket){
  console.log('a user connected');

  socket.on("chat-message", function(msg){
    insert(msg);
    io.emit("user message", {"mail": msg.email, "user": msg.name, "message": msg.send});
  });

  // Who is writing
  socket.on("focus", function(name){
    io.emit("focus_emit", {"name_emit": name.name});
  })

  socket.on("focus_out", () => {
    io.emit("focusOut_emit");
  });

  // Load the chat-messages
  var mysql      = require('mysql');
  var db = mysql.createConnection({
    host     : 'localhost',
    user     : 'root',
    password : '',
    database : 'live-chat-node'
  });
  socket.on("load", function(msg){
    db.query("select * from chats", function(err, result){
      if(!err){
        // console.log(result);
        io.emit("loaded-massages", {data: result});
      }else{
        console.log("Sth wrong!");
      }
    })
  });

  // Add the New msg into the db
  function insert(msg){
    db.query("insert into chats (name, image, message) values ('"+ msg.name +"', '"+ msg.image +"', '"+ msg.send +"')", function(err, result){
      if(!err){
        console.log(result);
        io.emit("loaded-massages", {data: result});
      }else{
        console.log(err);
      }
    });
  }

  socket.on('disconnect', function(){
    console.log("Logout user");
  });
});


module.exports = io;